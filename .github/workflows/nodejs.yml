name: Install, Build & Run Cypress

on: [push]
env:
  CHILD_CONCURRENCY: 1
  NODE_ENV: test
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  CYPRESS_TEST_USERNAME: ${{ secrets.CYPRESS_TEST_USERNAME }}
  CYPRESS_TEST_PASSWORD: ${{ secrets.CYPRESS_TEST_PASSWORD }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  CYPRESS_CACHE_FOLDER: ${{ secrets.CYPRESS_CACHE_FOLDER }}
jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [10.15.1]
    steps:
      - name: Extract Branch Name
        run: echo "::set-env name=BRANCH::${GITHUB_REF##*/}"
      - uses: actions/checkout@v1
        with:
          ref: ${{ env.BRANCH }}
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory
        id: yarn-cache-directory
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Load Cached Yarn Modules
        uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache-directory.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Load Cached Cypress
        uses: actions/cache@v2.1.0
        with:
          path: ${{ env.CYPRESS_CACHE_FOLDER }}
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: Install Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn;
      - name: Run Unit Tests
        run: yarn test:unit;
      - name: Run Coverage Tests
        run: yarn test;
      - name: Create Badge For Coverage Results
        run: yarn create-coverage-badge;
      - name: Commit Coverage Results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./coverage/shields.json -f
          git checkout .
          git diff-index --quiet HEAD || git commit -m "Add Coverage Results"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACTIONS_TOKEN }}
          branch: ${{ env.BRANCH }}
  Dependabot_Auto_Merge:
    ## Identifies any jobs that must complete successfully before this job will run.
    needs: [test]
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event_name == 'pull_request' &&
      startsWith(github.event.pull_request.title, 'chore(deps-dev):')
    steps:
      - name: "@dependabot merge"
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.ACTIONS_TOKEN}}
          script: |
            await github.issues.createComment({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              body: '@dependabot merge'
            })
